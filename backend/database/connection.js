const { Pool } = require("pg")

// Configura√ß√£o do banco
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === "production" ? { rejectUnauthorized: false } : false,
})

// Testar conex√£o
pool.on("connect", () => {
  console.log("‚úÖ Conectado ao PostgreSQL")
})

pool.on("error", (err) => {
  console.error("‚ùå Erro na conex√£o PostgreSQL:", err)
})

async function initDatabase() {
  try {
    console.log("üîÑ Criando tabela coletas...")

    // Criar tabela
    await pool.query(`
      CREATE TABLE IF NOT EXISTS coletas (
        id SERIAL PRIMARY KEY,
        dia_semana VARCHAR(20) NOT NULL UNIQUE,
        tipo_coleta VARCHAR(50) NOT NULL,
        observacao TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `)

    // Verificar dados
    const result = await pool.query("SELECT COUNT(*) FROM coletas")
    const count = Number.parseInt(result.rows[0].count)

    if (count === 0) {
      console.log("üîÑ Inserindo dados iniciais...")

      const dadosIniciais = [
        ["segunda-feira", "org√¢nicos"],
        ["ter√ßa-feira", "metal/pl√°stico"],
        ["quarta-feira", "org√¢nicos"],
        ["quinta-feira", "papel/cart√£o"],
        ["sexta-feira", "org√¢nicos"],
        ["s√°bado", "metal/pl√°stico"],
        ["domingo", "sem coleta"],
      ]

      for (const [dia, tipo] of dadosIniciais) {
        await pool.query("INSERT INTO coletas (dia_semana, tipo_coleta) VALUES ($1, $2)", [dia, tipo])
      }

      console.log("‚úÖ Dados iniciais inseridos")
    } else {
      console.log(`‚úÖ Tabela j√° possui ${count} registros`)
    }
  } catch (error) {
    console.error("‚ùå Erro ao inicializar base de dados:", error)
    throw error
  }
}

module.exports = { pool, initDatabase }
